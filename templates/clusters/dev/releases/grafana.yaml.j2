apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata: { name: grafana, namespace: {{ edge.namespaces.obs }} }
spec:
  url: https://grafana.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata: { name: grafana, namespace: {{ edge.namespaces.obs }} }
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 8.x.x
      sourceRef: { kind: HelmRepository, name: grafana, namespace: {{ edge.namespaces.obs }} }
  values:
    adminUser: {{ edge.grafana.admin_user }}
    adminPassword: {{ edge.grafana.admin_password }}

    # Persist Grafana data (dashboards saved via UI). PVC can be re-enabled/disabled here.
    persistence:
      enabled: true
      size: 5Gi

    # Avoid init chown (often fails with local-path PVCs); use fsGroup instead.
    initChownData:
      enabled: false
    podSecurityContext:
      fsGroup: 472
      fsGroupChangePolicy: "OnRootMismatch"
    containerSecurityContext:
      runAsUser: 472
      runAsGroup: 472
      allowPrivilegeEscalation: false

    # Provision the InfluxDB(Flux) datasource via values (GitOps, no UI edits).
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: InfluxDB (Flux)
            type: influxdb
            access: proxy
            url: http://influxdb2.{{ edge.namespaces.obs }}.svc.cluster.local:{{ edge.influxdb.port | default(80) }}
            isDefault: true
            jsonData:
              version: Flux
              organization: {{ edge.influxdb.org }}
              defaultBucket: {{ edge.influxdb.bucket }}
            secureJsonData:
              token: {{ edge.influxdb.token | default('') }}

    # Auto-provision a basic dashboard with cpu_temp & hailo_temp
    dashboardsProvider:
      enabled: true
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

    dashboards:
      default:
        edge-telemetry:
          json: |
            {
              "id": null,
              "uid": "edge-telemetry",
              "title": "Edge Telemetry",
              "timezone": "browser",
              "schemaVersion": 39,
              "version": 1,
              "time": { "from": "now-15m", "to": "now" },
              "panels": [
                {
                  "type": "timeseries",
                  "title": "CPU Temp (mean)",
                  "gridPos": { "x": 0, "y": 0, "w": 12, "h": 8 },
                  "targets": [
                    {
                      "query": "from(bucket: \"telemetry\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r._measurement == \"cpu_temp\" and r._field == \"value\") |> aggregateWindow(every: 30s, fn: mean, createEmpty: false)",
                      "refId": "A"
                    }
                  ],
                  "options": { "legend": { "displayMode": "list", "placement": "bottom" } }
                },
                {
                  "type": "timeseries",
                  "title": "Hailo Temp (mean)",
                  "gridPos": { "x": 12, "y": 0, "w": 12, "h": 8 },
                  "targets": [
                    {
                      "query": "from(bucket: \"telemetry\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r._measurement == \"hailo_temp\" and r._field == \"value\") |> aggregateWindow(every: 30s, fn: mean, createEmpty: false)",
                      "refId": "A"
                    }
                  ],
                  "options": { "legend": { "displayMode": "list", "placement": "bottom" } }
                }
              ]
            }
